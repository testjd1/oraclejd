
DROP TABLE DEPT;

CREATE TABLE DEPT

       (DEPTNO NUMBER(2) CONSTRAINT PK_DEPT PRIMARY KEY,

DNAME VARCHAR2(14) ,

LOC VARCHAR2(13) ) ;

DROP TABLE EMP;

CREATE TABLE EMP

       (EMPNO NUMBER(4) CONSTRAINT PK_EMP PRIMARY KEY,

ENAME VARCHAR2(10),

JOB VARCHAR2(9),

MGR NUMBER(4),

HIREDATE DATE,

SAL NUMBER(7,2),

COMM NUMBER(7,2),

DEPTNO NUMBER(2) CONSTRAINT FK_DEPTNO REFERENCES DEPT);

INSERT INTO DEPT VALUES

(10,'ACCOUNTING','NEW YORK');

INSERT INTO DEPT VALUES (20,'RESEARCH','DALLAS');

INSERT INTO DEPT VALUES

(30,'SALES','CHICAGO');

INSERT INTO DEPT VALUES

(40,'OPERATIONS','BOSTON');

INSERT INTO EMP VALUES

(7369,'SMITH','CLERK',7902,to_date('17-12-1980','dd-mm-yyyy'),800,NULL,20);

INSERT INTO EMP VALUES

(7499,'ALLEN','SALESMAN',7698,to_date('20-2-1981','dd-mm-yyyy'),1600,300,30);

INSERT INTO EMP VALUES

(7521,'WARD','SALESMAN',7698,to_date('22-2-1981','dd-mm-yyyy'),1250,500,30);

INSERT INTO EMP VALUES

(7566,'JONES','MANAGER',7839,to_date('2-4-1981','dd-mm-yyyy'),2975,NULL,20);

INSERT INTO EMP VALUES

(7654,'MARTIN','SALESMAN',7698,to_date('28-9-1981','dd-mm-yyyy'),1250,1400,30);

INSERT INTO EMP VALUES

(7698,'BLAKE','MANAGER',7839,to_date('1-5-1981','dd-mm-yyyy'),2850,NULL,30);

INSERT INTO EMP VALUES

(7782,'CLARK','MANAGER',7839,to_date('9-6-1981','dd-mm-yyyy'),2450,NULL,10);

INSERT INTO EMP VALUES

(7788,'SCOTT','ANALYST',7566,to_date('13-7-1987','dd-mm-yyyy')-85,3000,NULL,20);

INSERT INTO EMP VALUES

(7839,'KING','PRESIDENT',NULL,to_date('17-11-1981','dd-mm-yyyy'),5000,NULL,10);

INSERT INTO EMP VALUES

(7844,'TURNER','SALESMAN',7698,to_date('8-9-1981','dd-mm-yyyy'),1500,0,30);

INSERT INTO EMP VALUES

(7876,'ADAMS','CLERK',7788,to_date('13-7-1987','dd-mm-yyyy')-51,1100,NULL,20);

INSERT INTO EMP VALUES

(7900,'JAMES','CLERK',7698,to_date('3-12-1981','dd-mm-yyyy'),950,NULL,30);

INSERT INTO EMP VALUES

(7902,'FORD','ANALYST',7566,to_date('3-12-1981','dd-mm-yyyy'),3000,NULL,20);

INSERT INTO EMP VALUES

(7934,'MILLER','CLERK',7782,to_date('23-1-1982','dd-mm-yyyy'),1300,NULL,10);

DROP TABLE BONUS;

CREATE TABLE BONUS

(

ENAME VARCHAR2(10) ,

JOB VARCHAR2(9)  ,

SAL NUMBER,

COMM NUMBER

) ;

DROP TABLE SALGRADE;

CREATE TABLE SALGRADE

      ( GRADE NUMBER,

LOSAL NUMBER,

HISAL NUMBER );

INSERT INTO SALGRADE VALUES (1,700,1200);

INSERT INTO SALGRADE VALUES (2,1201,1400);

INSERT INTO SALGRADE VALUES (3,1401,2000);

INSERT INTO SALGRADE VALUES (4,2001,3000);

INSERT INTO SALGRADE VALUES (5,3001,9999);

COMMIT;

?

SET TERMOUT ON

SET ECHO ON




--1. 사원명에 ‘L’자가 있는 사원에 대해 이름, 업무, 부서명, 위치를 출력
select e.ename ename, e.job job, d.dname dname, d.loc loc
from emp e, dept d
where e.deptno=d.deptno
and e.ename like '%L%';

select e.ename ename, e.job job, d.dname dname, d.loc loc
from emp e full join  dept d
on e.deptno = d.deptno
where e.ename like '%L%';

--group by
--having
--order by

--2. 관리자보다 먼저 입사한 사원에 대해 이름, 입사일, 관리자 이름, 관리자 입사일을 출력
select e1.ename, e1.hiredate, e2.ename mgname,e2.hiredate mghiredate
from emp e1, emp e2
where e1.mgr = e2.empno(+)
and e2.hiredate > e1.hiredate;


select e1.ename, e1.hiredate, e2.ename mgname,e2.hiredate mghiredate
from emp e1 left outer join emp e2
on e1.mgr = e2.empno
where e2.hiredate > e1.hiredate;

??

--3. 아래의 결과를 출력 ( 관리자가 없는 KING을 포함하여 모든 사원을 출력 )
select e1.empno, e1.ename, e1.mgr, e2.ename as 매니저명
from emp e1, emp e2
where e1.mgr = e2.empno(+);


select e1.empno, e1.ename, e1.mgr, e2.ename as 매니저명
from emp e1 left outer join emp e2
on e1.mgr = e2.empno;



/*
전체 사원들 중 평균 급여보다 낮은 급여를 받는 사원의 명단을 조회
` 평균 급여 구하기
select round(avg(sal)) from emp;
` 그 평균 급여보다 낮은 사원 정보 조회
select ename, sal from emp 
where sal < (select round(avg(sal)) from emp );
*/
select round(avg(sal)) from emp;

select ename, sal from emp 
where sal < (select round(avg(sal)) from emp );


-- 월급이 가장 많은 사원의 정보 조회
select  max(sal)  from emp;   

select ename, sal
from emp
where sal = (select  max(sal) from emp); 


-- 평균 급여보다 높고 최대 급여보다 낮은 월급을 받는 사원의 정보를 조회
select round(avg(sal),0) from emp;
select max(sal) from emp;

select ename, sal
from emp
where  sal  > (select round(avg(sal),0) from emp)
and sal< (select max(sal) from emp);

select e.*
from emp e,
(select round(avg(sal)) avg, max(sal) max from emp ) ext
where e.sal>ext.avg and e.sal<ext.max;

-- 월급순으로 상위 10명의 명단을 출력

select *
from emp
where rownum <11
order by sal desc;


select e.*
from (select ename, sal from emp order by sal desc) e
where rownum < 11;







--<< 연습문제 >>

--1. SCOTT의 급여보다 많은 사원의 정보를 사원번호, 이름, 담당업무, 급여를 출력
select e.empno,e.ename,e.job, e.sal 
from emp e,(select empno, ename, job, sal from emp where ename='SCOTT') ext
where e.sal > ext.sal;
?

--2. 30번 부서의 최소 급여보다 각부서의 최소 급여가 높은 부서를 출력
select e.dept
from emp e,(select deptno, min(sal) ms from emp group by deptno ) de
where d and de.deptno = 30
group by e.dept;e.ms<e.min(sal)


select deptno,min(sal)
from emp
group by deptno
having min(sal)> (select min(sal) from emp where deptno = 30);
?

--3. 업무별로 평균 급여 중에서 가장 적은 급여를 가진 직업을 출력
select job, avg(sal) from emp group by job;


select job , avg(sal)
from emp
group by job
having avg(sal)= (select  min(avg(sal))  from emp group by job);


-- 4. 사원번호가 7521의 업무와 같고 사번 7934인 직원보다 급여를 많이 받는 사원의 정보를 출력
select *
from emp
where job like (select job from emp where empno = 7521) and sal>(select sal from emp where empno=7934);

-- 5. 'WARD'와 부서와 업무가 같은 사원 명단 출력
select ename
from emp
where ENAME != 'WARD' AND job like (select job from emp where ename like 'WARD') AND DEPTNO like (SELECT DEPTNO FROM EMP WHERE ENAME LIKE 'WARD');

-- 업무별로 최소 급여 받는 사원의 정보 사원번호, 이름, 담당업무, 급여 출력


select  job,min(sal)
from emp
group by job;

select empno, ename, job, sal
from emp
where (job,sal) in ( select job, min(sal) from emp group by job );

insert into emp(empno, ename, job, sal) values(9999,'test','CLERK',1250);


-- 10번 부서 사원들의 업무와 동일한 직원들 검색

select job
from emp
where deptno = 10;

select ename, job
from emp
where job = any( select job from emp where deptno = 10);

select ename, job
from emp
where job in ( select job from emp where deptno = 10);


--  적어도 한명의 사원으로부터 보고 받을 수 있는 사원의 정보를 사원번호, 이름, 업무 출력
select empno, ename, job
from emp e1
where exists ( select * from emp e2 where e1.empno = e2.mgr);
-- Ford, Blanke, King, Jones, Scott, Clark


-- 사원 추출
select empno, ename, job
from emp e1
where not exists ( select * from emp e2 where e1.empno = e2.mgr);


create table stat_salary ( 

stat_date date not null, -- 날짜

dept_no number, -- 부서

emp_count number, -- 사원수

tot_salary number, -- 급여총액

avg_salary number ); -- 급여평균

desc stat_salary;


select sysdate, deptno from emp group by deptno;

insert into stat_salary (stat_date, dept_no)
select sysdate, deptno from emp group by deptno;

select* from stat_salary;


select deptno, count(*) 사원수, sum(sal) 급여총액, round(avg(sal)) 평균급여
from emp
group by deptno
order by deptno;


update stat_salary ss
set(emp_count, tot_salary, avg_salary)
= (select count(*) , sum(sal) , round(avg(sal)) 
from emp e
where  ss.dept_no = e.deptno
group by deptno);


select* from stat_salary;

create table emp_cp as select * from emp;
select * from emp_cp;


-- 부서명이 'SALES'  emp_cp
delete  from emp_cp
where job = (select job from emp  where job like 'SALES');

select * from emp_cp;

delete from emp_cp
where deptno = (select deptno from dept where dname like 'SALES');
?

merge into emp_cp e1
using emp e2
on(e1.ename = e2.ename)
when matched then
update set e1.sal = e2.sal*1.1
when not matched then 
    insert(e1.empno,e1.ename,e1.job,e1.mgr,e1.hiredate,e1.sal,e1.comm,e1.deptno)
    values(e2.empno,e2.ename,e2.job,e2.mgr,e2.hiredate,e2.sal,e2.comm,e2.deptno);






