--1. Zlotkey와 동일한 부서에 속한 모든 사원의 이름과 입사일을 표시하는 질의를 작성하십시오. 
-- Zlotkey는 제외하십시오.
?
select last_name,department_id from employees  where Last_name = 'Zlotkey';

select concat(first_name,last_name) fullname, hire_date
from employees e1, (select department_id from employees  where Last_name = 'Zlotkey') e2
where e1.department_id = e2.department_id
and not e1.Last_name = 'Zlotkey';


--2. 급여가 평균 급여보다 많은 모든 사원의 사원 번호와 이름을 표시하는 질의를 작성하고 
-- 결과를 급여에 대해 오름차순으로 정렬하십시오.
select employee_id, concat(first_name,last_name) fullname
from employees  
where salary > (select avg(salary) from employees);
?

?

--3. 이름에 u가 포함된 사원과 같은 부서에서 일하는 모든 사원의 사원 번호와 이름을 표시하는
-- 질의를 작성하십시오.
select  concat(first_name,last_name) fullname , department_id
from employees
where concat(first_name,last_name) like '%u%';

select department_id from employees where concat(first_name,last_name) like '%u%' group by department_id ;
?

select  concat(first_name,last_name) fullname , department_id
from employees
where department_id in (select department_id from employees where concat(first_name,last_name) like '%u%' group by department_id );

?
--4. 부서 위치 ID가 1700인 모든 사원의 이름, 부서 번호 및 업무 ID를 표시하십시오.
select d.department_id, concat(e.first_name,e.last_name) fullname, e.department_id, e.employee_id
from departments d full join employees e
on d.department_id = e.department_id
where d.location_id = 1700;
?

?
--5. King에게 보고하는 모든 사원의 이름과 급여를 표시하십시오.

SELECT E1.FIRST_NAME||' '||E1.LAST_NAME AS 이름, E1.SALARY
FROM EMPLOYEES E1 INNER JOIN EMPLOYEES E2
                    ON E1.MANAGER_ID = E2.EMPLOYEE_ID
WHERE E2.LAST_NAME IN (SELECT LAST_NAME FROM EMPLOYEES WHERE LAST_NAME LIKE 'King');

SELECT E1.FIRST_NAME||' '||E1.LAST_NAME AS 이름, E1.SALARY
FROM EMPLOYEES E1
WHERE EXISTS (SELECT LAST_NAME FROM EMPLOYEES E2 WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID AND E2.LAST_NAME LIKE 'King');


SELECT   CONCAT(e2.FIRST_NAME,e2.LAST_NAME) 이름, e2.SALARY
FROM     EMPLOYEES e2
WHERE    MANAGER_Id  any (SELECT e2.manager_id FROM EMPLOYEES E2 
                            WHERE E1.MANAGER_ID = E2.EMPLOYEE_ID 
                            AND E2.LAST_NAME LIKE 'King');



-- 6. Executive 부서의 모든 사원에 대한 부서 번호, 이름 및 업무 ID를 표시하십시오.
SELECT E.DEPARTMENT_ID,E.FIRST_NAME||' '||E.LAST_NAME AS 이름, E.JOB_ID
FROM EMPLOYEES E
WHERE EXISTS (SELECT DEPARTMENT_NAME FROM DEPARTMENTS D WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND D.DEPARTMENT_NAME LIKE 'Executive');

SELECT E.DEPARTMENT_ID,E.FIRST_NAME||' '||E.LAST_NAME AS 이름, E.JOB_ID
FROM EMPLOYEES E LEFT OUTER JOIN DEPARTMENTS D
                ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE  E.DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM DEPARTMENTS  WHERE DEPARTMENT_NAME LIKE 'Executive'); 

-- 7. 평균 급여보다 많은 급여를 받고 이름에 u가 포함된 사원과 같은 부서에서 근무하는 모든 사원의 사원 번호, 이름 및 급여를 표시하는 질의를 작성하십시오.
SELECT EMPLOYEE_ID,FIRST_NAME||' '||LAST_NAME AS 이름,SALARY
FROM EMPLOYEES 
WHERE DEPARTMENT_ID in (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE LOWER(FIRST_NAME) LIKE LOWER('%u%') or LOWER(LAST_NAME) LIKE LOWER('%u%')) AND SALARY>(SELECT AVG(SALARY) FROM EMPLOYEES);

SELECT EMPLOYEE_ID,FIRST_NAME||' '||LAST_NAME AS 이름,SALARY
FROM EMPLOYEES 
WHERE DEPARTMENT_ID in (SELECT DEPARTMENT_ID FROM EMPLOYEES WHERE FIRST_NAME LIKE '%u%' or LAST_NAME LIKE '%u%') AND SALARY>(SELECT AVG(SALARY) FROM EMPLOYEES);